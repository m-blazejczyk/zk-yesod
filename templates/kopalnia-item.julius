if(#{isEdit}) {
  $(document).ready(function() {

    $('#tytul').editable();

    $('#rodzaj').editable(#{rawJS $ decodeUtf8 rodzajeToJson});

    $('#jezyk').editable(#{rawJS $ decodeUtf8 jezykiToJson});

    $('#isbn').editable({ emptytext: '[brak]' });

    $('#objetosc').editable({ emptytext: '[brak]' });

    $('#strony').editable({ emptytext: '[brak]' });

    $('#opis').editable({ emptytext: '[brak]' });

    // The source is obtained from Haskell, but the configuration is easier to provide directly here.
    var wydConf = #{rawJS $ decodeUtf8 wydawcyJson};
    wydConf.select2 = {
      multiple: false,
      placeholder: 'wybierz wydawcę',
      allowClear: true,
      width: 300
    };
    // We need a custom display function here to display the name of the publisher on the page after selection.
    wydConf.display = function(value, response) {
      if(!value || (typeof(value) == 'string' && value.trim() == '')) {
        $(this).html('[brak]');
      } else {
        var id = parseInt(value);
        var text = value;
        for(var i = 0, len = wydConf.source.length; i < len; i++) {
          if(wydConf.source[i].id === id) {
            text = wydConf.source[i].text;
            break;
          }
        }
        $(this).html(text);
      }
    };
    $('#wydawca').editable(wydConf);

    $('#url').editable({
      display: function(value, response) {
        if(value.trim()=='') {
          $(this).html('link do zawartości [brak]');
        } else {
          $(this).html('link do zawartości [ustawiony]'); 
        }
      }
    });

    $('#datapub').editable({
      value: {
        year: '#{rawJS $ fst dataWyd}',
        month: '#{rawJS $ snd dataWyd}'
      },
      validate: function(value) {
        if(value) {
          if(value.year) {
            var year = parseInt(value.year);
            if(isNaN(year) || year < 1800 || year > (new Date()).getFullYear() + 1)
              return 'Niepoprawny rok';
          }
          if(value.month) {
            var month = parseInt(value.month);
            if(isNaN(month) || month < 1 || month > 12)
              return 'Niepoprawny miesiąc';
          }
          if(!value.year && value.month) 
            return 'Rok jest wymagany, jeśli podajesz miesiąc';
        }
      },
      display: function(value, response) {
        if (!value || (!value.month && !value.year)) {
          $(this).html('[brak]');
        } else {
          if(value.month) {
            var month = parseInt(value.month), monthStr = value.month;

            if(month == 1) monthStr = "styczeń";
            else if(month == 2) monthStr = "luty";
            else if(month == 3) monthStr = "marzec";
            else if(month == 4) monthStr = "kwiecień";
            else if(month == 5) monthStr = "maj";
            else if(month == 6) monthStr = "czerwiec";
            else if(month == 7) monthStr = "lipiec";
            else if(month == 8) monthStr = "sierpień";
            else if(month == 9) monthStr = "wrzesień";
            else if(month == 10) monthStr = "październik";
            else if(month == 11) monthStr = "listopad";
            else if(month == 12) monthStr = "grudzień";

            $(this).html(monthStr + " " + value.year);
          } else {
            $(this).html(value.year);
          }
        }
      }
    });

    // This editable is configured differently because it's purpose is to *add* new publisher records.
    $('#addWydawce').editable({
      value: {
        nazwa: '',
        url: ''
      },
      validate: function(value) {
        if(value) {
          if(value.url && !value.nazwa) {
            return 'Nazwa wydawcy jest wymagana';
          }
          // TODO: validate the url
        }
      },
      display: function(value, response) {
        $(this).html('<span></span>');
      },
      success: function(response, newValue) {
        // TODO: The contents of the fields in the pop-up don't actually reset.
        // TODO: The new item is not added to the available options in the "wydawcy" editable.
        $('#addWydawce').editable('setValue', { nazwa: '', url: '' });
        $('#wydawca').editable('setValue', newValue.nazwa);
      }
    });
/*
    $('#autorzy').editable({
      source: [
        {id: 1, text: 'Michał Błażejczyk'},
        {id: 2, text: 'Jerzy Szyłak'},
        {id: 3, text: 'Wojciech Birek'}
      ],
      select2: {
        multiple: true,
        placeholder: 'wybierz autorów',
        allowClear: true,
        width: 300
      }
    });
*/
    $('#autorzy').editable({
      select2: {
        multiple: true,
        placeholder: 'wybierz autorów',
        allowClear: true,
        width: 300,
        minimumInputLength: 2,
        quietMillis: 250,
        ajax: {
          url: '/autor/szukaj',
          dataType: 'json',
          data: function (term, page) {
            return { q: term };
          },
          /*results: function (data, page) {
            console.log("results: " + data);
            return { results: data.items };
          }*/
        },
        /*id: function (item) {
          console.log("id: " + item);
          return item.id;
        },
        formatResult: function (item) {
          console.log("formatResult: " + item);
          return item.text;
        },
        formatSelection: function (item) {
          console.log("formatSelection: " + item);
          return item.text;
        },*/
        initSelection: function (element, callback) {
          // the input tag has a value attribute preloaded that points to a preselected repository's id
          // this function resolves that id attribute to an object that select2 can render
          // using its formatResult renderer - that way the repository name is shown preselected
          console.log("initSelection: " + $(element).val());
          /*
          var id = $(element).val();
          if (id !== "") {
            $.ajax("https://api.github.com/repositories/" + id, { dataType: "json" })
             .done(function(data) { callback(data); });
          }
          */
        } 
      }  
    });

  });
}
